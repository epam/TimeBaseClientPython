name: Release dxapi

on:
  push:
    branches: [release-*, wip*]
    
jobs:

  prepare:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b workflow-$GITHUB_RUN_ID
          versionSnapshot=`grep 'version=' project.properties | sed 's/version=\([^-]*\)/\1/'`
          versionRelease=`echo $versionSnapshot | sed 's/\([^-]*\)-SNAPSHOT/\1/'`
          versionSnapshotNext=`echo $versionSnapshot | perl -pe 's/^((\d+\.)*)(\d+)(.*)$/$1.($3+1).$4/e'`
          echo "$versionSnapshot -> $versionRelease  -> $versionSnapshotNext"
          sed -i "s/version=$versionSnapshot/version=$versionRelease/" project.properties
          git commit -am "[skip-ci] Generate release version"
          sed -i "s/version=$versionRelease/version=$versionSnapshotNext/" project.properties
          git commit -am "[skip-ci] Generate next snapshot version"
          git push origin HEAD

  build-dxapi:
    needs: [prepare]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: macos-latest
            env_os: MACOS
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build Dxapi
        run: make -C ./dxapi/.
        env: 
          CC: clang
          OS: ${{ matrix.env_os }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-${{ matrix.os }}
          path: ./dxapi/bin/libdxapi-x64.a
          
#   build-windows-dxapi:
#     needs: [prepare]
#     runs-on: windows-latest
#     steps:
#     - name: Check out repository code
#       uses: actions/checkout@v2
#       with:
#         submodules: 'recursive'
#     - name: Use MSBuild
#       uses: microsoft/setup-msbuild@v1.0.2
#     - name: Build Solution
#       run: msbuild ./dxapi/dxapi.sln /p:configuration=release /p:platform=x64 /t:rebuild
#     - name: Archive artifacts
#       uses: actions/upload-artifact@v2
#       with:
#         name: dxapi-windows
#         path: ./dxapi/bin/dxapi-x64.lib
        
  build-dxapi-python-linux:
    runs-on: ubuntu-latest
    needs: [build-dxapi]
    strategy:
      matrix:
        py: ['2.7', '3.6', '3.7', '3.8']
        include:
          - py: '2.7'
            py_env: '27'
          - py: '3.6'
            py_env: '36'
          - py: '3.7'
            py_env: '37'
          - py: '3.8'
            py_env: '38'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download dxapi-linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: dxapi-ubuntu-latest
          path: dxapi/bin
      - name: install dev python 2.7 & 3.8
        if: ${{ matrix.py == '2.7' || matrix.py == '3.8' }}
        run: |
          sudo apt-get update
          sudo apt install -y python${{ matrix.py }}-dev
      - name: install dev python 3.6 & 3.7
        if: ${{ matrix.py == '3.6' || matrix.py == '3.7' }}
        run: |
          sudo apt-get update
          sudo apt-get install -yq software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt-get install python${{ matrix.py }}-dev
      - name: Build Dxapi
        run: |
          make -C .
          cp ./dfp/lib/linux/64/libDecimalNative.so ./bin/release/linux/x64/py${{ matrix.py_env }}/
        env: 
          CC: clang
          PYTHON_VERSION: ${{ matrix.py_env }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-python-linux
          path: |
            ./bin/release/__init__.py
            ./bin/release/linux/x64/py${{ matrix.py_env }}/_dxapi.so
            ./bin/release/linux/x64/py${{ matrix.py_env }}/libDecimalNative.so

#   build-dxapi-python-windows:
#     runs-on: windows-latest
#     needs: [build-windows-dxapi]
#     strategy:
#       matrix:
#         py: ['2.7', '3.6', '3.7', '3.8']
#         include:
#           - py: '2.7'
#             py_env: '27'
#             release: Release27
#           - py: '3.6'
#             py_env: '36'
#             release: Release
#           - py: '3.7'
#             py_env: '37'
#             release: Release37
#           - py: '3.8'
#             py_env: '38'
#             release: Release38
#     steps:
#     - name: Check out repository code
#       uses: actions/checkout@v2
#       with:
#         submodules: 'recursive'
#     - name: Download dxapi-windows artifacts
#       uses: actions/download-artifact@v2
#       with:
#         name: dxapi-windows
#         path: dxapi/bin
#     - uses: actions/setup-python@v2
#       with:
#         python-version: '${{ matrix.py }}'
#     - name: Use MSBuild
#       uses: microsoft/setup-msbuild@v1.0.2
#     - name: Build Solution
#       run: |
#         Expand-Archive -Path ./swigwin/swigwin-3.0.12.zip -DestinationPath ./swigwin -Force
#         $pwd = pwd
#         $Env:SWIG_HOME="$pwd/swigwin/swigwin-3.0.12"
#         $Env:SWIG_HOME
#         python --version
#         python -c "import os, sys; print(os.path.dirname(sys.executable))"
#         $Env:PYTHON${{ matrix.py_env }}_HOME=python -c "import os, sys; print(os.path.dirname(sys.executable))"
#         $Env:PYTHON${{ matrix.py_env }}_HOME
#         msbuild ./dxapi-python.sln /p:configuration=${{ matrix.release }} /p:platform=x64 /t:rebuild
#     - name: Archive artifacts
#       uses: actions/upload-artifact@v2
#       with:
#         name: dxapi-python-windows
#         path: |
#           ./bin/release/__init__.py
#           ./bin/release/windows/x64/py${{ matrix.py_env }}/_dxapi.pyd
#           ./bin/release/windows/x64/py${{ matrix.py_env }}/DecimalNative.dll

  build-dxapi-python-macos:
    runs-on: macos-latest
    needs: [build-dxapi]
    strategy:
      matrix:
        py: ['2.7', '3.6', '3.7', '3.8']
        include:
          - py: '2.7'
            py_env: '27'
          - py: '3.6'
            py_env: '36'
            py_v: '3.6.8'
          - py: '3.7'
            py_env: '37'
            py_v: '3.7.9'
          - py: '3.8'
            py_env: '38'
            py_v: '3.8.10'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download dxapi-macos artifacts
        uses: actions/download-artifact@v2
        with:
          name: dxapi-macos-latest
          path: dxapi/bin
      - name: Setup Python ${{ matrix.py_env }}
        if: ${{ matrix.py != '2.7' }}
        run: |
          curl -O https://www.python.org/ftp/python/${{ matrix.py_v }}/python-${{ matrix.py_v }}-macosx10.9.pkg
          sudo installer -pkg ./python-${{ matrix.py_v }}-macosx10.9.pkg -target /
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - name: Install SWIG
        run: |
          curl -OL https://sourceforge.net/projects/swig/files/swig/swig-3.0.12/swig-3.0.12.tar.gz
          tar -xzvf swig-3.0.12.tar.gz
          cd swig-3.0.12
          ./configure
          make
          make install
      - name: Build Dxapi
        run: |
           make -C .
           cp ./dfp/lib/osx/64/libDecimalNative.dylib ./bin/release/darwin/x64/py${{ matrix.py_env }}/
        env:
          CC: clang
          OS: MACOS
          PYTHON_VERSION: ${{ matrix.py_env }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-python-macos
          path: |
            ./bin/release/__init__.py
            ./bin/release/darwin/x64/py${{ matrix.py_env }}/_dxapi.so
            ./bin/release/darwin/x64/py${{ matrix.py_env }}/libDecimalNative.dylib
            
  gather-artifacts:
    runs-on: ubuntu-latest
    needs: [build-dxapi-python-linux, build-dxapi-python-macos]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Download dxapi-python-linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: dxapi-python-linux
          path: ./dxapi/
      - name: Download dxapi-python-macos artifacts
        uses: actions/download-artifact@v2
        with:
          name: dxapi-python-macos
          path: ./dxapi/
      - name: Download dxapi-python-windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: dxapi-python-windows
          path: ./dxapi/
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-python
          path: |
            ./dxapi/__init__.py
            ./dxapi/**/*

  release:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: [gather-artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Release branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git checkout -b workflow-$GITHUB_RUN_ID origin/workflow-$GITHUB_RUN_ID~1
          versionRelease=`grep 'version=' project.properties | sed 's/version=\([^-]*\)/\1/'`
          echo $versionRelease
          echo $versionRelease >> ./version.txt
          git push origin origin/workflow-$GITHUB_RUN_ID:$GITHUB_REF
      - name: Version artifact
        uses: actions/upload-artifact@v2
        with:
          name: version-file
          path: ./version.txt
          
  publish:
    needs: [release]
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download dxapi-python artifacts
        uses: actions/download-artifact@v2
        with:
          name: dxapi-python
          path: ./dxapi/
      - name: Download version-file artifacts
        uses: actions/download-artifact@v2
        with:
          name: version-file
      - name: Build PyPi package
        run: |
          $Version = get-content .\version.txt
          echo $Version
          pip install wheel
          python3 setup.py bdist_wheel --universal
#          python3 -m twine upload --repository-url $Env:REPOSITORY_URL --username $Env:REPOSITORY_USER --password $Env:REPOSITORY_PASSWORD} dist/*
        env:
          REPOSITORY_URL: add repository url
          REPOSITORY_USER: ${{ secrets.PYPI_USER }}
          REPOSITORY_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dxapi-pypi-package
          path: ./dist/

  cleanup-release:
    if: ${{ always() && !contains(github.event.head_commit.message, '[skip-ci]') }}
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cleanup
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push origin --delete workflow-$GITHUB_RUN_ID || true
